package com.example.demo;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

public class AdminDashboardController {

    @FXML
    private ComboBox<String> categoryComboBox;

    @FXML
    private TextField articleTitleField;

    @FXML
    private TextArea articleContentArea;

    @FXML
    private javafx.scene.layout.AnchorPane articleAddSection; // Section for adding article

    @FXML
    private javafx.scene.layout.AnchorPane articleRemoveSection; // Section for removing article

    // Add predefined categories
    private static final String[] CATEGORIES = {"Technology", "Health", "Sports", "AI"};

    // Initialize method to populate category combo box
    public void initialize() {
        categoryComboBox.getItems().addAll(CATEGORIES);
        articleAddSection.setVisible(false);  // Initially hide the Add Article section
        articleRemoveSection.setVisible(false);  // Initially hide the Remove Article section
    }

    // Handle Add Article button click
    public void handleAddArticle(ActionEvent event) {
        articleAddSection.setVisible(true); // Show the Add Article section
        articleRemoveSection.setVisible(false); // Hide the Remove Article section
    }

    // Handle Remove Article button click
    public void handleRemoveArticle(ActionEvent event) {
        articleAddSection.setVisible(false); // Hide the Add Article section
        articleRemoveSection.setVisible(true); // Show the Remove Article section
    }

    // Handle the actual adding of the article
    public void handleSubmitArticle(ActionEvent event) {
        String category = categoryComboBox.getValue();
        String title = articleTitleField.getText();
        String content = articleContentArea.getText();

        if (category == null || title.isEmpty() || content.isEmpty()) {
            showAlert("Error", "Please select a category, and fill in both title and content.");
            return;
        }

        saveArticleToFile(title, category, content);
        showAlert("Success", "Article '" + title + "' added successfully under '" + category + "' category!");
    }

    // Method to save the article to a file under the selected category
    private void saveArticleToFile(String title, String category, String content) {
        String filename = "data/Articles_" + category + ".txt";
        try (PrintWriter writer = new PrintWriter(new FileWriter(filename, true))) {
            writer.println("Title: " + title);
            writer.println("Content: " + content);
            writer.println("=====================================");
        } catch (IOException e) {
            e.printStackTrace();
            showAlert("Error", "Failed to save the article.");
        }
    }

    // Show alerts
    private void showAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

    // Handle logout
    @FXML
    public void handleLogout(ActionEvent event) {
        showAlert("Logout", "Logging out...");
        try {
            Parent loginRoot = FXMLLoader.load(getClass().getResource("login.fxml"));
            Scene loginScene = new Scene(loginRoot);
            Stage currentStage = (Stage) ((Node) event.getSource()).getScene().getWindow();
            currentStage.setScene(loginScene);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
